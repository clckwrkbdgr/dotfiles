#!/bin/bash
MESSAGES_TO_STORE=20 # To store in message log.
MESSAGE_LOG_FILE=/tmp/notification.log
TITLE=notification
ICON=

usage() {
	echo "Usage:"
	echo "  $(basename ${0}) [-q] [-t title] [-i icon] <text>"
	echo "      Displays notification pop-up, plays signal sound and reads message aloud."
	echo "      Also stores last $MESSAGES_TO_STORE messages in log."
	echo "      -q  - quiet mode (no sounds/voice)."
	echo "  $(basename ${0}) -l"
	echo "      Prints previous $MESSAGES_TO_STORE messages."
	echo "  $(basename ${0}) -h"
	echo "      Prints this message and exits."
}

if [ "$*" == "-l" ]; then
	cat "$MESSAGE_LOG_FILE"
	exit 0
fi

while getopts ":hqt:i:l" opt; do
	case "$opt" in
		h) usage; exit 0;;
		l) echo "ERROR: Option -l cannot be used with other options." >&2; usage >&2; exit 1;;
		t) TITLE=$OPTARG;;
		i) ICON=$OPTARG;;
		q) QUIET=true;;
		\?) echo "Invalid option -$OPTARG"; exit 1;;
		:) echo "Parameter is missing for -$OPTARG"; exit 1;;
	esac
done
shift $((OPTIND-1))

[ "$QUIET" != true ] && play_signal &
if [ -n "$1" ]; then
	notify-send "$TITLE" "$@" --icon="$ICON" &
	TEMPFILE="$(mktemp)"
	echo "$(date) <${TITLE}> $@" >>"$MESSAGE_LOG_FILE"
	tail -n "$MESSAGES_TO_STORE" "$MESSAGE_LOG_FILE" >"$TEMPFILE" && mv -f "$TEMPFILE" "$MESSAGE_LOG_FILE"
	[ "$QUIET" != true ] && text-to-speech "$@"
fi

