#!/bin/bash
current_volume() {
	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		amixer get "$CHANNEL" | sed '/^ *Front\ Left: /{s/^.*\[\(.*\)%\].*/\1/;p;};d;'
	else
		amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)%\].*/\1/;p;};d;'
	fi
}

current_volume_status() {
	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		amixer get "$CHANNEL" | awk '$2 == "Left:" { print $NF; }'
	else
		amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)\]$/\1/;p;};d;'
	fi
}

if [ "$1" == "-h" ]; then
	echo "Usage: volume [-n] { up | down | reset }"
	echo "    -n  - display notification about volume change (sometimes built-in one does not work)."
	exit 0
fi
if [ "$1" == "-n" ]; then
	SHOW_NOTIFICATION_POPUP=true
	shift
fi

LOCK_FILE=/tmp/volume.lock
while [ -f "$LOCK_FILE" ]; do
	:
done
trap 'rm -f "$LOCK_FILE"' EXIT
touch "$LOCK_FILE"

CHANNEL=Master
STEP=5%
CURRENT_VOLUME=$(current_volume)
CURRENT_STATUS=$(current_volume_status)

if [ "$1" == "up" ]; then
	amixer set "$CHANNEL" $STEP+ >/dev/null
elif [ "$1" == "down" ]; then
	amixer set "$CHANNEL" $STEP- >/dev/null
elif [ "$1" == "reset" ]; then
	VOLUME=${2:-33}
	amixer set "$CHANNEL" ${VOLUME}% >/dev/null
fi

VOLUME=$(current_volume)
STATUS=$(current_volume_status)
if [ "$VOLUME" == "$CURRENT_VOLUME" -a "$STATUS" == "$CURRENT_STATUS" ]; then
	SHOW_NOTIFICATION_POPUP=false
fi

if [ "$SHOW_NOTIFICATION_POPUP" == true ]; then
	if [ "$STATUS" = '[off]' ]; then
		ICON=audio-volume-muted
	elif [ "$VOLUME" -eq 0 ]; then
		ICON=audio-volume-muted
	elif [ "$VOLUME" -lt 33 ]; then
		ICON=audio-volume-low
	elif [ "$VOLUME" -lt 66 ]; then
		ICON=audio-volume-medium
	else
		ICON=audio-volume-high
	fi
	LINE=$(echo $VOLUME | python3 -c 'i=int(input())//5;print("["+"|"*i+"-"*(20-i)+"] ")')
	LINE="${LINE} ${VOLUME}%"

	# Workaround for xfce4-notifyd: kill previous notification popup to display new one in its place.
	wmctrl -l | grep xfce4-notifyd | awk '{print $1}' | while read wnd_id; do
		xdotool windowkill "$wnd_id"
	done
	notify-send "Volume" -i "$ICON" "$LINE" &
fi
