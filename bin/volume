#!/bin/bash
if [ "$1" == "-h" ]; then
	echo "Usage: volume [-n] { up | down | reset }"
	echo "    -n  - display notification about volume change (sometimes built-in one does not work)."
	exit 0
fi

CHANNEL=Master
STEP=5%
if [ "$1" == "-n" ]; then
	SHOW_NOTIFICATION_POPUP=true
	shift
fi

if [ "$1" == "up" ]; then
	amixer set "$CHANNEL" $STEP+ >/dev/null
elif [ "$1" == "down" ]; then
	amixer set "$CHANNEL" $STEP- >/dev/null
elif [ "$1" == "reset" ]; then
	VOLUME=${2:-33}
	amixer set "$CHANNEL" ${VOLUME}% >/dev/null
fi

if [ "$SHOW_NOTIFICATION_POPUP" == true ]; then
	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		VOLUME=$(amixer get "$CHANNEL" | sed '/^ *Front\ Left: /{s/^.*\[\(.*\)%\].*/\1/;p;};d;')
		STATUS=$(amixer get "$CHANNEL" | awk '$2 == "Left:" { print $NF; }')
	else
		VOLUME=$(amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)%\].*/\1/;p;};d;')
		STATUS=$(amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)\]$/\1/;p;};d;')
	fi

	if [ "$STATUS" = '[off]' ]; then
		ICON=notification-audio-volume-muted
	else
		if [ "$VOLUME" -eq 0 ]; then
			ICON=notification-audio-volume-off
		elif [ "$VOLUME" -lt 33 ]; then
			ICON=notification-audio-volume-low
		elif [ "$VOLUME" -lt 66 ]; then
			ICON=notification-audio-volume-medium
		else
			ICON=notification-audio-volume-high
		fi
	fi
	LINE=$(echo $VOLUME | python3 -c 'i=int(input())//5;print("["+"|"*i+"-"*(20-i)+"] ")')
	LINE="${LINE} ${VOLUME}%"

	notify-send "Volume" -i "$ICON" "$LINE"
fi
