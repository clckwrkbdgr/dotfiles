#!/bin/bash
current_volume() {
	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		amixer get "$CHANNEL" | sed '/^ *Front\ Left: /{s/^.*\[\(.*\)%\].*/\1/;p;};d;'
	else
		amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)%\].*/\1/;p;};d;'
	fi
}

current_volume_status() {
	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		amixer get "$CHANNEL" | awk '$2 == "Left:" { print $NF; }'
	else
		amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)\]$/\1/;p;};d;'
	fi
}

set_volume() {
	CHANNEL="$1"
	VOLUME="$2"
	if [ "$VOLUME" -lt 0 -o "$VOLUME" -gt 150 ]; then
		echo "Invalid volume level: $VOLUME, expected to be in range of 0..150" >&2
		return 1
	fi
	if [ "$VOLUME" -lt 100 ]; then
		amixer set "$CHANNEL" ${VOLUME}% >/dev/null
	else
		pactl set-sink-volume 0 ${VOLUME}%
	fi
	return 0
}

if [ "$1" == "-h" ]; then
	echo "Usage: volume [-n] { up | down | [reset] <level> } [-c command arg arg... ] "
	echo "    -n  - display notification about volume change (sometimes built-in one does not work)."
	echo "Without arguments will print current volume level."
	exit 0
fi
if [ "$1" == "-n" ]; then
	SHOW_NOTIFICATION_POPUP=true
	shift
fi

CHANNEL=Master
STEP=5%
OLD_VOLUME=$(current_volume)
OLD_STATUS=$(current_volume_status)

if [ "$1" == "up" ]; then
	amixer set "$CHANNEL" $STEP+ >/dev/null
	shift
elif [ "$1" == "down" ]; then
	amixer set "$CHANNEL" $STEP- >/dev/null
	shift
elif [ "$1" == "reset" ]; then
	set_volume "$CHANNEL" "${2}"
	shift 2
elif echo "$1" | grep -q '^[0-9]\+$'; then
	set_volume "$CHANNEL" "${1}"
	shift
else
	current_volume
fi

VOLUME=$(current_volume)
STATUS=$(current_volume_status)
if [ "$VOLUME" == "$OLD_VOLUME" -a "$STATUS" == "$OLD_STATUS" ]; then
	SHOW_NOTIFICATION_POPUP=false
fi

if [ "$SHOW_NOTIFICATION_POPUP" == true ]; then
	if [ "$STATUS" = '[off]' ]; then
		ICON=audio-volume-muted
	elif [ "$VOLUME" -eq 0 ]; then
		ICON=audio-volume-muted
	elif [ "$VOLUME" -lt 33 ]; then
		ICON=audio-volume-low
	elif [ "$VOLUME" -lt 66 ]; then
		ICON=audio-volume-medium
	else
		ICON=audio-volume-high
	fi
	LINE=$(echo $VOLUME | python3 -c 'i=int(input())//5;print("["+"|"*i+"-"*(20-i)+"] ")')
	LINE="${LINE} ${VOLUME}%"

	if which aosd_cat >/dev/null; then
		echo "$LINE" | aosd_cat -d 2 -x 0 -y -745 -e 0 -t 0 -b 255 -B black -R orange -f 0 -u 2000 -o 0 -d 2 &
	else
		# Workaround for xfce4-notifyd: kill previous notification popup to display new one in its place.
		wmctrl -l | grep xfce4-notifyd | awk '{print $1}' | while read wnd_id; do
			xdotool windowkill "$wnd_id"
		done
		notify-send "Volume" -i "$ICON" "$LINE" &
	fi
fi

if [ "$1" == '-c' ]; then
	shift
	"$@"
	RC=$?
	set_volume "$CHANNEL" "$OLD_VOLUME"
	exit $RC
fi
