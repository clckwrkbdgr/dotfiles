#!/bin/bash
. "$XDG_CONFIG_HOME/lib/windowmanager.bash"
. "$XDG_CONFIG_HOME/lib/click.bash"

browser=${firefox_binary:-/usr/bin/firefox-esr}
pnames="${firefox_pnames:-firefox-esr x-www-browser iceweasel}"

click::command cli 'Firefox CLI interface.'
click::flag '-H' '--hide' '' --help='Do not activate browser window.'
click::flag '-A' '--activate' '' --help='Activate browser window. Without urls will just bring existing window to top. Overrides --hide if both are present.'
click::argument 'urls' --nargs=-1 --help='URL(s) to open. May be a local file path. May be an *.url file: treated like a *.desktop entry, searches for URL field.'
cli() {
	if [ -n "${CLICK_ARGS[activate]}" -a -n "${CLICK_ARGS[hide]}" ]; then
		CLICK_ARGS[hide]=''
	fi
	
	[ -z "${CLICK_ARGS[hide]}" ] && bring_to_top_by_pnames $pnames

	if [ -n "${CLICK_ARGS[activate]}" -a 0 -eq "${#CLICK_NARGS[@]}" ]; then
		return 0
	fi

	for f in "${CLICK_NARGS[@]}"; do
		if [ -f "$f" ]; then
			if echo "$f" | grep -q '[.]url$'; then
				( set -o pipefail;
					grep 'URL' "$f" | sed 's/^URL *= *//'
				) && continue
			fi
		fi
		if [ -f "$f" ]; then
			f="$(as_uri "$f")"
		fi
		echo "${f}" | sed 's/\r//g'
	done | xargs -d '\n' $browser --
}

click::run "$@"

