#!/usr/bin/env python
import sys, subprocess
import time
import clckwrkbdgr.net
import clckwrkbdgr.click

import click

EPILOG = """\b
By default tries hosts:
  8.8.8.8 # Google DNS
  8.8.4.4 # Google DNS
Loads additional hosts from files: {custom_hosts_files} (if present).
Lines should be in format '<ip> # <optional comment>'
Known hosts (with custom):
  """.format(custom_hosts_files=', '.join(map(str, clckwrkbdgr.net.custom_hosts_files)))
EPILOG += '\n  '.join(clckwrkbdgr.net.known_hosts)

def available_interfaces():
	try:
		output = subprocess.check_output(['ip', 'link', 'show'])
		result = []
		for line in output.decode('utf-8', 'replace').splitlines():
			if line.startswith(' '):
				continue
			result.append(line.split(':')[1].strip())
		return result
	except Exception as e:
		print(e, file=sys.stderr)
		return []

@click.command(epilog=EPILOG)
@click.option('-h', '--host', help='host (name/IP) to ping. If host is not specified, it is randomly picked from predefined list of trusted locations.')
@click.option('-c', '--count', type=int, default=1, help='amount of tries, by default is 1. When set to 0, pings infinitely until the first success.')
@click.option('-i', '--interface', help="specific network interface to use. See 'ip link show' or 'netstat -a'. Available interfaces: " + ' '.join(available_interfaces()))
@click.option('-q', '--quiet', is_flag=True, help='No output.')
def cli(host=None, count=None, interface=None, quiet=False):
	""" Checks network availability. """
	hosts = [host] if host else None
	if count == 0:
		count = -1 # To make it infinite.

	while count != 0:
		count -= 1
		if clckwrkbdgr.net.check_hosts(hosts, interface=interface, verbose=not quiet):
			return True
		time.sleep(1)
	sys.exit(1)

if __name__ == '__main__':
	cli()
