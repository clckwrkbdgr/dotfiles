#!/bin/bash
set -o pipefail

panic() {
	echo "$@" >&2
	exit 1
}

usage() {
cat >&2 <<EOF
Checks network availability.
Usage: $0 [-h <host>] [-c <count>]
     -h  - host (name/IP) to ping.
           If host is not specified, it is randomly picked from predefined list of trusted locations.
     -c  - amount of tries, by default is 1.
	       When set to 0, pings infinitely until the first success.
Known hosts:
$(known_hosts)
EOF
}

known_hosts() {
cat <<EOF
8.8.8.8 # Google DNS
8.8.4.4 # Google DNS
139.130.4.5 # Australian primary NS
208.67.222.222 # OpenDNS
208.67.220.220 # OpenDNS
EOF
}

random_host() {
	known_hosts | cut -d ' ' -f 1 | sort -R | head -1
}

clear_ping_output() {
	egrep --line-buffered -v 'PING ([[:digit:]]+[.]?)+ \(([[:digit:]]+[.]?)+\) from ([[:digit:]]+[.]?)+ [a-z0-9]+: [0-9]+\([0-9]+\) bytes of data.' | \
	egrep --line-buffered -v 'PING ([[:digit:]]+[.]?)+ \(([[:digit:]]+[.]?)+\) [0-9]+\([0-9]+\) bytes of data.' | \
	egrep --line-buffered -v -- '--- ([[:digit:]]+[.]?)+ ping statistics ---' | \
	grep --line-buffered -v '^$'
	true
}

check_host() {
	HOST="${1:-127.0.0.1}"
	INTERFACE="$2"
	[ -n "$INTERFACE" ] && INTERFACE_ARG="-I '$INTERFACE'"
	ping $INTERFACE_ARG -qc 1 "$HOST" | clear_ping_output
}

while getopts "h:c:i:q" optarg; do
	case "${optarg}" in
		h) HOST="$OPTARG" ;;
		q) QUIET=true ;;
		i) INTERFACE="$OPTARG" ;;
		c) COUNT="$OPTARG"
			echo "$COUNT" | grep -q '^[0-9]\+$' || panic 'Count argument should be a number.'
			;;
		*) usage; exit 1; ;;
	esac
done
HOST="${HOST:-`random_host`}"
COUNT="${COUNT:-1}"
if [ "$COUNT" != 0 ]; then
	COUNTER="seq $COUNT"
else
	COUNTER="yes"
fi

trap 'echo Interrupted; exit 1' INT
$COUNTER | while read; do
	if [ -z "$QUIET" ]; then
		check_host "$HOST" "$INTERFACE" && exit 0
	else
		check_host "$HOST" "$INTERFACE" >/dev/null && exit 0
	fi
	sleep 1
done && exit 0
exit 1 # All attempts failed.
