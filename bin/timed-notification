#!/bin/bash
STATUS_FILE=/tmp/timed-notification.status

cleanup_dead_statuses() {
	[ -r "$STATUS_FILE" ] || return
	cat "$STATUS_FILE" | awk '{print $1}' | while read pid; do
		ps $pid >/dev/null 2>&1 || sed -i "/^$pid /d" "$STATUS_FILE"
	done
}

usage() {
	echo "Usage:"
	echo "    $(basename "$0") -q"
	echo "    $(basename "$0") [-m <message>] [-t <minutes to wait>]"
}

is_number() {
	case "$1" in
		''|*[!0-9]*) return 1 ;;
		*) return 0 ;;
	esac
}

CURRENT_PID=$$
MINUTES=0
MESSAGE=

while getopts "qm:t:" arg; do
	case "$arg" in
		q)
			[ -r "$STATUS_FILE" ] || exit 0
			cleanup_dead_statuses
			cat "$STATUS_FILE"
			exit 0
			;;
		m) MESSAGE="$OPTARG" ;;
		t) MINUTES="$OPTARG" ;;
		*) usage; exit 1 ;;
	esac
done

if ! is_number "$MINUTES"; then
	echo "Minutes arg is not a number!"
	MINUTES=0
fi

while [ $MINUTES == 0 ]; do
	MINUTES=$(zenity --entry --text='Input number of minutes:' --entry-text 5 2>/dev/null)
	if [  $? != 0 ]; then
		exit 1
	fi
done

while [ -z "$MESSAGE" ]; do
	MESSAGE=$(zenity --entry --text='Enter message text:' --entry-text "$MESSAGE" 2>/dev/null)
	if [  $? != 0 ]; then
		exit 1
	fi
done

cleanup_dead_statuses
echo "$CURRENT_PID [$(date)] ${MINUTES}m: $MESSAGE" >>"$STATUS_FILE"
sleep ${MINUTES}m
notification "$MESSAGE"
sed -i "/^$CURRENT_PID /d" "$STATUS_FILE"
