set nocompatible " Reset many settings; should be at the very first line.

set backupdir=~/.cache/vim,~/,/tmp
if has('win32')
  set directory=$TEMP,c:\tmp,c:\temp,.
  set viminfo='100,<50,s10,h,rA:,rB:,n$TEMP/viminfo
endif
if !has('win32')
	set directory=/var/tmp//,.,/tmp//
endif
if !has('win32')
  set shell=bash
  if v:version > 600
     set viminfo='100,<50,s10,h,n~/.cache/vim/viminfo
  else
     set viminfo='100,h,n~/.cache/vim/viminfo
  endif
endif
set runtimepath+=~/.config/vim
set runtimepath+=~/.config/vim/after
if has('win32')
   let g:netrw_home=$USERPROFILE.'/.cache/vim'
endif
if !has('win32')
   let g:netrw_home=$XDG_CACHE_HOME.'/vim'
endif

autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") |   exe "normal g`\"" | endif
au BufRead,BufNewFile *.md set filetype=markdown
au BufRead,BufNewFile *.tilespec,*.spec set filetype=dosini

" Remap Ctrl-J as Escape for: normal, insert, operator (y, d etc), visual, command-line
nnoremap <C-J> <Esc>
inoremap <C-J> <Esc>
onoremap <C-J> <Esc>
vnoremap <C-J> <Esc>
cnoremap <C-J> <Esc>

if !has('win32')
	map <S-Insert> <MiddleMouse> " Make shift-insert work like in Xterm
	map! <S-Insert> <MiddleMouse> " Make shift-insert work like in Xterm
endif
map <C-a> :e %:p:s,.h$,.X123X,:s,.cpp$,.h,:s,.X123X$,.cpp,<CR> " switching between .h and .cpp files that in the SAME directory.
nmap <Space> <PageDown>
nmap <C-L> :make<up><CR>
nmap Q l
nmap QQ :w<CR>
inoremap <C-Space> <C-^>
nmap <C-p> :tabnew<Bar>setlocal buftype=nofile<Bar>read !xclip -o<CR>

silent! call pathogen#infect()
silent! call pathogen#helptags()
set backspace=indent,eol,start " allow backspacing over everything in insert mode
set history=50		" keep 50 lines of command line history
set incsearch		" do incremental searching
set hlsearch
set nobackup
set keymap=russian-jcukenwin " Toggle with C-^
set iminsert=0
set imsearch=0
set iskeyword=@,48-57,_,192-255
set shiftwidth=4
set tabstop=4
set scrolloff=7
set fo+=cr " perhaps will helps with newline after comments.
set foldmethod=syntax " autofolds
set autoindent
set smartindent
set pastetoggle=<F5>
syntax on
nohl

hi Folded ctermbg=none
hi Folded ctermfg=cyan
hi FoldColumn ctermbg=none
hi FoldColumn ctermfg=cyan

filetype plugin indent on
au FileType python set tabstop=4 | set noexpandtab
au FileType python call ftplugin#python#PyIndentAutoCfg()
au FileType votl set softtabstop=4
augroup XML
    autocmd!
    autocmd FileType xml let g:xml_syntax_folding=1
    autocmd FileType xml setlocal foldmethod=syntax
    autocmd FileType xml :syntax on
    autocmd FileType xml :%foldopen!
augroup END
au FileType html setlocal foldmethod=syntax
au FileType votl setlocal foldlevel=0
let maplocalleader=",," " Vim Outliner leader key.
set foldcolumn=0

set background=light " fixes too bright colours in urxvt
