#!/bin/bash
SECTION="$1"
LAST_VERSION=$(git tag | sed 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\)/\1/' | sort -nt . | tail -1)
REPO_NAME=$(git remote -v | grep '(push)' | sed 's/.*\/\([^\/]*\)\.git.*/\1/')
MAJOR=$(echo $LAST_VERSION | sed 's/.*\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)/\1/')
MINOR=$(echo $LAST_VERSION | sed 's/.*\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)/\2/')
REVISION=$(echo $LAST_VERSION | sed 's/.*\([0-9]\+\)\.\([0-9]\+\)\.\([0-9]\+\)/\3/')
MINOR=${MINOR:-0}
MAJOR=${MAJOR:-0}
REVISION=${REVISION:-0}

case "$SECTION" in
	( major ) MAJOR=$((MAJOR+1)); MINOR=0; REVISION=0 ;;
	( minor ) MINOR=$((MINOR+1)); REVISION=0 ;;
	( rev | revision ) REVISION=$((REVISION+1)) ;;
	( * ) FAILED=true; echo "Unknown section: <$SECTION>. Should be: major, minor or revision (rev)." ;;
esac
[ "$FAILED" == true ] && exit 1

NEW_VERSION="${MAJOR}.${MINOR}.${REVISION}"
git tag
echo -n "Add <$NEW_VERSION>, (y)es?"
read YES
if [ "$YES" == "y" ]; then
	git tag -a "${NEW_VERSION}" -m "${REPO_NAME} v${NEW_VERSION}"
	#git tag -a "${REPO_NAME}-${NEW_VERSION}" -m "v${NEW_VERSION}"
	echo "Added new tag <$NEW_VERSION>"
fi
