#!/bin/bash
[ -f ~/.profile.local ] && source ~/.profile.local

doom() {
	IWAD=$1
	shift

	if [ -z "$IWAD" ]; then
		echo 'Usage: doom [1|2] [wads | dehs]'
		exit 1
	fi

	if echo -e "1\ndoom1\ndoom" | grep -q "^$IWAD$"; then
		IWAD=doom
	elif echo -e "2\ndoom2" | grep -q "^$IWAD$"; then
		IWAD=doom2
	else
		echo "Unknown iwad: $IWAD"
		exit 1
	fi
	[ -n "$1" ] && FILE_ARG="-file"
	prboom-plus -iwad ${DOOMWADDIR:-.}/$IWAD.wad "$FILE_ARG" "$@"
}

fortune() {
	/usr/bin/printf "$(wget -q -O - fucking-great-advice.ru/api/random | awk -F \" '{print $8}' | sed 's/\&nbsp;/ /g')\n" 
}

knockknock() {
	HOST=${1:-8.8.8.8}
	[ -n "$2" ] && INTERFACE="-I $2"
	COUNT=0
	while true; do
		if ping -c 1 -s 1 -W 2 "$HOST" $INTERFACE >/dev/null 2>&1; then
			echo -n +
			COUNT=$((COUNT+1))
		else
			echo -n -
			COUNT=0
		fi
		[ $COUNT -gt 10 ] && aplay -q "$SIGNAL_SOUND"
		sleep 3
	done
}

lock_ws() {
	if upower -i /org/freedesktop/UPower/devices/DisplayDevice | grep state | grep -q dis; then
		alert 'Connect laptop to charger before locking workstation!'
	else
		xflock4
	fi
}

screenshot() {
	FILENAME=~/screenshot-$(date -Is).png
	QUESTION="Screenshot was saved to $FILENAME.\nDo you want to open it in GIMP for editing?"
	xwd | xwdtopnm | pnmtopng >"$FILENAME" || rm -f "$FILENAME"
	[ -f "$FILENAME" ] && zenity --question --text "$QUESTION" && gimp "$FILENAME"
}

switch_ws() {
	CURRENT_WS=$(wmctrl -d | grep '\* \+DG:' | cut -d ' ' -f 1)
	WS_COUNT=$(wmctrl -d | wc -l)
	if [ "$1" == "next" ]; then
		WS=$(($CURRENT_WS + 1))
		if [ "$WS" -ge "$WS_COUNT" ]; then
			exit
		fi
	elif [ "$1" == "prev" ]; then
		WS=$(($CURRENT_WS - 1))
		if [ "$WS" -lt 0 ]; then
			exit
		fi
	else
		WS=${1:-0}
	fi
	wmctrl -s "$WS"
}

unhide_xfce_panel() {
	xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -s false
	xfconf-query -c xfce4-panel -p /panels/panel-0/autohide -s true
}

volume() {
	CHANNEL=Master
	STEP=5%
	SHOW_POPUP=False

	if [ "$1" == "up" ]; then
		amixer set "$CHANNEL" $STEP+ >/dev/null
	elif [ "$1" == "down" ]; then
		amixer set "$CHANNEL" $STEP- >/dev/null
	elif [ "$1" == "reset" ]; then
		VOLUME=${2:-33}
		amixer set "$CHANNEL" ${VOLUME}% >/dev/null
	fi


	if amixer get "$CHANNEL" | grep -q 'Front Left'; then
		VOLUME=$(amixer get "$CHANNEL" | sed '/^ *Front\ Left: /{s/^.*\[\(.*\)%\].*/\1/;p;};d;')
		STATUS=$(amixer get "$CHANNEL" | awk '$2 == "Left:" { print $NF; }')
	else
		VOLUME=$(amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)%\].*/\1/;p;};d;')
		STATUS=$(amixer get "$CHANNEL" | sed '/^ *Mono: Playback /{s/^.*\[\(.*\)\]$/\1/;p;};d;')
	fi

	if [ "$STATUS" = '[off]' ]; then
		ICON=notification-audio-volume-muted
	else
		if [ "$VOLUME" -eq 0 ]; then
			ICON=notification-audio-volume-off
		elif [ "$VOLUME" -lt 33 ]; then
			ICON=notification-audio-volume-low
		elif [ "$VOLUME" -lt 66 ]; then
			ICON=notification-audio-volume-medium
		else
			ICON=notification-audio-volume-high
		fi
	fi
	LINE=$(echo $VOLUME | python3 -c 'i=int(input())//5;print("["+"|"*i+"-"*(20-i)+"] ")')
	LINE="${LINE} ${VOLUME}%"

	[ "$SHOW_POPUP" == False ] && exit 0
	notify-send "Volume" -i "$ICON" "$LINE"
}

wallpaper() {
	# Export variables.
	user=$( whoami )
	pid=$( pgrep -u $user gnome-panel )
	for dbusenv in $pid; do
		DBUS_SESSION_BUS_ADDRESS=$( grep -z DBUS_SESSION_BUS_ADDRESS /proc/$pid/environ | sed -e 's/DBUS_SESSION_BUS_ADDRESS=//' )
		data="DBUS_SESSION_BUS_ADDRESS=$DBUS_SESSION_BUS_ADDRESS"
		eval " export $data"
	done

	WALLPFILE=$(find "$WALLPAPERS_DIR" -type f | shuf | head -1)

	gconftool-2 -t string -s /desktop/gnome/background/picture_filename "$WALLPFILE"
	gsettings set org.gnome.desktop.background picture-uri "file://$WALLPFILE"
	xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-path -s "$WALLPFILE"
	xfconf-query -c xfce4-desktop -p /backdrop/screen0/monitor0/image-style -s 4 # Scaled
}

mocp_pause() {
	XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
	mocp -M "$XDG_CONFIG_HOME/moc" -G
}

ARG="$1"
shift
case "$ARG" in
	"doom") doom ;;
	"fortune") fortune ;;
	"knockknock") knockknock "$@" ;;
	"lock_ws") lock_ws ;;
	"screenshot") screenshot ;;
	"switch_ws") switch_ws "$@" ;;
	"unhide-xfce-panel") unhide_xfce_panel ;;
	"volume") volume "$@" ;;
	"pause") mocp_pause "$@" ;;
	"wallpaper") wallpaper ;;
	*) echo 'Wat?' ;;
esac
